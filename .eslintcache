[{"/Volumes/transcend/Spree-Task/src/index.js":"1","/Volumes/transcend/Spree-Task/src/App.js":"2","/Volumes/transcend/Spree-Task/src/Requests.js":"3","/Volumes/transcend/Spree-Task/src/Table.js":"4"},{"size":142,"mtime":1616594953000,"results":"5","hashOfConfig":"6"},{"size":9181,"mtime":1618427764000,"results":"7","hashOfConfig":"6"},{"size":2924,"mtime":1618532363000,"results":"8","hashOfConfig":"6"},{"size":12418,"mtime":1618538696000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"djdnge",{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"/Volumes/transcend/Spree-Task/src/index.js",[],["21","22"],"/Volumes/transcend/Spree-Task/src/App.js",["23","24"],"import { makeStyles } from '@material-ui/core/styles';\nimport React , {useState} from 'react';\nimport photo from './profile_photo.png';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ViewAgendaIcon from '@material-ui/icons/ViewAgenda';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport Requests from './Requests';\nfunction App(){\n  const classes = useStyles();\n  const [requests, setRequests] = useState(false);\n  const [users, setUsers] = useState(false);\n  const [orders, setOrders] = useState(false);\n  const [boxes, setBoxes] = useState(false);\n  const [settings, setSettings] = useState(false);\n  const [picture, setPicture] = useState(false);\n  const handleRequests = () => {\n  if (requests) {\n    setRequests(false);\n  }\n  else {\n    setRequests(true);\n  }\n}\n  const handleUsers = () => {\n    if (users) {\n      setUsers(false);\n    }\n    else {\n      setUsers(true);\n    }\n  }\n  const handleOrders = () => {\n    if (orders) {\n      setOrders(false);\n    }\n    else {\n      setOrders(true);\n    }\n  }\n  const handleBoxes = () => {\n    if (boxes) {\n      setBoxes(false);\n    }\n    else {\n      setBoxes(true);\n    }\n  }\n  const handleSettings = () => {\n    if (settings) {\n      setSettings(false);\n    }\n    else {\n      setSettings(true);\n    }\n  }\n  const handleImage = () => {\n    if (picture) {\n      setPicture(false);\n    }\n    else {\n      setPicture(true);\n    }\n  }\n  return (\n      <div className={classes.container}>\n        <div className={classes.card} >\n          <span className={classes.title}>xo.</span>\n          <div className={classes.rowContainer}>\n            {!picture &&\n             <img src={photo} onClick={handleImage}/> \n            }\n             {picture &&\n             <img src={photo} onClick={handleImage}  style={{border: '1px solid #0A47C4', borderRadius: 30}}/> \n            }\n             <div className={classes.nameContainer}>\n             <span>Ahmed Reda</span>\n             <span className={classes.id}>#1253724</span>\n             </div>\n          </div>\n          <div className={classes.rowContainer}>\n            <DashboardIcon style={{color: '#C2CFE0'}}/>\n            <span style={{marginLeft: 20, color: '#334D6E'}}>Dashboard</span>\n          </div>\n          {!requests &&\n          <div className={classes.rowContainer} style={{cursor: 'pointer'}} onClick={handleRequests}>\n            <ViewAgendaIcon style={{color: '#C2CFE0'}}/>\n            <span style={{marginLeft: 20, color: '#334D6E'}}>Requests</span>\n            </div>\n          } \n            {requests && \n                <div>\n                    <div className={classes.rowContainer} style={{cursor: 'pointer'}} onClick={handleRequests}>\n                      <ViewAgendaIcon style={{color: '#0A47C4'}}/>\n                      <span style={{marginLeft: 20, color: '#0A47C4'}}>Requests</span>\n                      </div>\n                <div className={classes.subRow}>\n                  <div>\n                  <RadioButtonUncheckedIcon style={{color: '#FFB946'}} />\n                  </div>\n                  <span>Pending</span>\n                </div>\n                <div className={classes.subRow}>\n                <RadioButtonUncheckedIcon style={{color: '#2ED47A'}} />\n                <span>Confirmed</span>\n              </div>\n              <div style={{marginTop: 20}}>\n              <span style={{marginLeft: 50}}>All Requests</span>\n              </div>\n              </div>\n            }\n            {!users &&\n          <div className={classes.rowContainer} style={{cursor: 'pointer'}} onClick={handleUsers}>\n            <PersonOutlineIcon style={{color: '#C2CFE0'}}/>\n            <span style={{marginLeft: 20, color: '#334D6E'}}>Users</span>\n            </div>\n            }\n            {users &&\n              <div>\n                 <div className={classes.rowContainer} style={{cursor: 'pointer'}} onClick={handleUsers}>\n            <PersonOutlineIcon style={{color: '#0A47C4'}}/>\n            <span style={{marginLeft: 20, color: '#0A47C4'}}>Users</span>\n            </div>\n                <div className={classes.subRow}>\n                  <div>\n                  <RadioButtonUncheckedIcon style={{color: '#FFB946'}}/>\n                  </div>\n                  <span>Customers</span>\n                </div>\n                <div className={classes.subRow}>\n                  <div>\n                  <RadioButtonUncheckedIcon style={{color: '#885AF8'}}/>\n                  </div>\n                  <span>Admins</span>\n                </div>\n                <div className={classes.subRow}>\n                  <div>\n                  <RadioButtonUncheckedIcon style={{color: '#2ED47A'}}/>\n                  </div>\n                  <span>Ordering</span>\n                </div>\n                <div className={classes.subRow}>\n                  <div>\n                  <RadioButtonUncheckedIcon style={{color: '#F7685B'}}/>\n                  </div>\n                  <span>WareHouse</span>\n                </div>\n                <div className={classes.subRow}>\n                  <div>\n                  <RadioButtonUncheckedIcon style={{color: '#334D6E'}}/>\n                  </div>\n                  <span>Accounting</span>\n                </div>\n              </div>\n            }\n            {!boxes &&\n             <div className={classes.rowContainer} style={{cursor: 'pointer'}} onClick={handleBoxes}>\n            <InboxIcon style={{color: '#C2CFE0'}}/>\n            <span style={{marginLeft: 20, color: '#334D6E'}}>Boxes</span>\n            </div>\n            }\n             {boxes &&\n             <div className={classes.rowContainer} style={{cursor: 'pointer'}} onClick={handleBoxes}>\n            <InboxIcon style={{color: '#0A47C4'}}/>\n            <span style={{marginLeft: 20, color: '#0A47C4'}}>Boxes</span>\n            </div>\n            }\n            {!orders &&\n            <div className={classes.rowContainer} style={{cursor: 'pointer'}} onClick={handleOrders}>\n            <ChatBubbleOutlineIcon style={{color: '#C2CFE0'}}/>\n            <span style={{marginLeft: 20, color: '#334D6E'}}>Orders</span>\n            </div>\n            }\n            {\n              orders &&\n              <div>\n                 <div className={classes.rowContainer} style={{cursor: 'pointer'}} onClick={handleOrders}>\n            <ChatBubbleOutlineIcon style={{color: '#0A47C4'}}/>\n            <span style={{marginLeft: 20, color: '#0A47C4'}}>Orders</span>\n            </div>\n                <div className={classes.subRow}>\n                  <div>\n                  <RadioButtonUncheckedIcon style={{color: '#FFB946'}}/>\n                  </div>\n                  <span>Pending</span>\n                </div>\n                <div className={classes.subRow}>\n                  <div>\n                  <RadioButtonUncheckedIcon style={{color: '#2ED47A'}}/>\n                  </div>\n                  <span>Confirmed</span>\n                </div>\n                <div style={{marginTop: 20}}>\n              <span style={{marginLeft: 50}}>All Orders</span>\n              </div>\n              </div>\n            }\n            <div style={{ borderBottom: '1px solid #EBEFF2', marginTop:50}}/>\n            {!settings &&\n            <div className={classes.rowContainer} style={{cursor: 'pointer'}} onClick={handleSettings}>\n            <MoreHorizIcon style={{color: '#C2CFE0'}}/>\n            <span style={{marginLeft: 20, color: '#334D6E'}}>Settings</span>\n            </div>\n            }\n            {settings &&\n            <div className={classes.rowContainer} style={{cursor: 'pointer'}} onClick={handleSettings}>\n            <MoreHorizIcon style={{color: '#0A47C4'}}/>\n            <span style={{marginLeft: 20, color: '#0A47C4'}}>Settings</span>\n            </div>\n            }\n            <div className={classes.rowContainer} style={{cursor: 'pointer'}}>\n            <PowerSettingsNewIcon style={{color: '#C2CFE0'}}/>\n            <span style={{marginLeft: 20, color: '#C2CFE0'}}>Logout</span>\n            </div>\n          </div>\n            <Requests />\n      </div>\n  );\n}\nconst useStyles = makeStyles({\n  container: {\n    backgroundColor: 'white',\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'white',\n    boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)',\n    zIndex: 10,\n    width: 256,\n    height: 1050,\n  },\n  title: {\n    color: '#0A47C4',\n    marginLeft: '24px',\n    fontWeight: 'bold',\n    fontSize: '24px',\n  },\n  rowContainer: {\n    display: 'flex',\n    marginLeft: 10,\n    marginTop: 20,\n    flexDirection: 'row',\n  },\n  subRow : {\n    display: 'flex',\n    marginLeft: 30,\n    marginTop: 20,\n    flexDirection: 'row',\n  },\n  id: {\n    color: '#90A0B7',\n  },\n  nameContainer: {\n    marginLeft: 20,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n});\nexport default App;\n","/Volumes/transcend/Spree-Task/src/Requests.js",[],"/Volumes/transcend/Spree-Task/src/Table.js",["25","26","27"],"import React , {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport dateFormat from 'dateformat';\nimport Pagination from '@material-ui/lab/Pagination';\nfunction Table(props){\n    const classes = useStyles();\n    const [data, setData] = useState([]);\n    const filtered = data.filter((item) => item.status === 'confirmed');\n    const[currentPage, setPage] = useState(1);\n    const dataPerPage = 8;\n    const totalPages = Math.ceil(data.length/dataPerPage);\n    const indexOfLastData = currentPage * dataPerPage ;\n    const indexOfFirstData = indexOfLastData - dataPerPage ;\n    const currentData = data.slice(indexOfFirstData, indexOfLastData);\n    const currentFilterData = filtered.slice(indexOfFirstData, indexOfLastData);\n    useEffect(() => {\n        let url = 'https://o53hpo7bf9.execute-api.us-west-2.amazonaws.com/dev/orders';\n        fetch(url)\n        .then(res => res.json())\n        .then((data) => {\n        setData(data.orders);\n        console.log(data);\n        console.log(totalPages);\n        })\n        .catch(err => { throw err });\n      }, []);\n      const handlePageNumber = (event, value) => {\n          setPage(value);\n      }\nreturn (\n    <div className={classes.tableConatiner}>\n        {/**First Row*/}\n        <Pagination count={totalPages} onChange={handlePageNumber}/>\n        <div className={classes.row}>\n            <div style={{width: '10%', display: 'flex', justifyContent: 'center'}}>\n    <CheckBoxOutlineBlankIcon style={{color: '#E5E5E5'}}/>\n    </div>\n    <div style={{width: '10%', display: 'flex', justifyContent: 'center'}}>\n    <span className={classes.text}>ID Number</span>\n    </div>\n    <div style={{width: '15%', display: 'flex', justifyContent: 'center'}}>\n    <span className={classes.text}>Name</span>\n    </div>\n    <div style={{width: '15%', display: 'flex', justifyContent: 'center'}}>\n    <span className={classes.text}>Status</span>\n    </div>\n    <div style={{width: '20%', display: 'flex', justifyContent: 'center'}}>\n    <span className={classes.text}>Supplier</span>\n    </div>\n    <div style={{width: '20%', display: 'flex', justifyContent: 'center'}}>\n    <span className={classes.text}>Date</span>\n    </div>\n        </div>\n        {/**Filtered and sort by ID */}\n        {props.filter === 1 && props.sort === 2 && props.text === '' &&\n        <div>\n    {currentFilterData.sort((a, b) => a.id - b.id).map((item, index) => {return (\n        <div>\n            <div className={classes.row} key={index}>\n                <div style={{width: '10%', display: 'flex', justifyContent: 'center'}}>\n            <CheckBoxOutlineBlankIcon style={{color: '#E5E5E5'}}/>\n            </div>\n            <div style={{width: '10%', display: 'flex', justifyContent: 'center'}}>\n            <span >#{item.id}</span>\n            </div>\n            <div style={{width: '15%', display: 'flex', justifyContent: 'center'}}>\n            <span>{item.customer.fname} {item.customer.lname}</span>\n            </div>\n            <div style={{width: '15%', display: 'flex', justifyContent: 'center'}}>\n            <span>{item.status}</span>    \n            </div>\n            <div style={{width: '20%', display: 'flex', justifyContent: 'center'}}>\n            <span>{item.supplier}</span>\n            </div>\n            <div style={{width: '20%', display: 'flex', justifyContent: 'center'}}>\n            <span>{dateFormat(item.created_at, \" mmmm dS HH:mm, yyyy\")}</span>\n            </div>\n            </div>\n            </div>\n        )})}\n        </div>\n        }\n{/**Filtered and sort by Date */}\n{props.filter === 1 && props.sort === 1 && props.text === '' &&\n        <div>\n    {currentFilterData.sort((a, b) => new Date(...a.created_at.split('/').reverse()) - new Date(...b.created_at.split('/').reverse())).map((item, index) => {return (\n        <div>\n            <div className={classes.row} key={index}>\n                <div style={{width: '10%', display: 'flex', justifyContent: 'center'}}>\n            <CheckBoxOutlineBlankIcon style={{color: '#E5E5E5'}}/>\n            </div>\n            <div style={{width: '10%', display: 'flex', justifyContent: 'center'}}>\n            <span >#{item.id}</span>\n            </div>\n            <div style={{width: '15%', display: 'flex', justifyContent: 'center'}}>\n            <span>{item.customer.fname} {item.customer.lname}</span>\n            </div>\n            <div style={{width: '15%', display: 'flex', justifyContent: 'center'}}>\n            <span>{item.status}</span>    \n            </div>\n            <div style={{width: '20%', display: 'flex', justifyContent: 'center'}}>\n            <span>{item.supplier}</span>\n            </div>\n            <div style={{width: '20%', display: 'flex', justifyContent: 'center'}}>\n            <span>{dateFormat(item.created_at, \" mmmm dS HH:mm, yyyy\")}</span>\n            </div>\n            </div>\n            </div>\n        )})}\n        </div>\n        }\n\n        {/**ALL REQUESTS AND SORTED BY ID */}\n        {props.sort === 2 && props.filter === 2 && props.text === '' &&\n            <div >\n            {currentData.sort((a, b) => a.id - b.id).map((item, index) => {return (\n                <div>\n                {item.status === \"pending_confirmation\" && \n                 <div className={classes.row} key={index} style={{backgroundColor:'#EBFFE1'}}>\n                     <div style={{width: '10%', display: 'flex', justifyContent: 'center'}}>\n                 <CheckBoxOutlineBlankIcon style={{color: '#E5E5E5'}}/>\n                 </div>\n                 <div style={{width: '10%', display: 'flex', justifyContent: 'center'}}>\n                 <span >#{item.id}</span>\n                 </div>\n                 <div style={{width: '15%', display: 'flex', justifyContent: 'center'}}>\n                 <span>{item.customer.fname} {item.customer.lname}</span>\n                 </div>\n                 <div style={{width: '15%', display: 'flex', justifyContent: 'center'}}>\n                 <span>{item.status}</span>    \n                 </div>\n                 <div style={{width: '20%', display: 'flex', justifyContent: 'center'}}>\n                <span>{item.supplier}</span>\n                </div>\n                <div style={{width: '20%', display: 'flex', justifyContent: 'center'}}>\n                <span>{dateFormat(item.created_at, \" mmmm dS HH:mm, yyyy\")}</span>\n                </div>\n                </div>}  \n\n                {item.status === \"confirmed\" &&\n                <div className={classes.row} key={index}>\n                    <div style={{width: '10%', display: 'flex', justifyContent: 'center'}}>\n                <CheckBoxOutlineBlankIcon style={{color: '#E5E5E5'}}/>\n                </div>\n                <div style={{width: '10%', display: 'flex', justifyContent: 'center'}}>\n                <span >#{item.id}</span>\n                </div>\n                <div style={{width: '15%', display: 'flex', justifyContent: 'center'}}>\n                <span>{item.customer.fname} {item.customer.lname}</span>\n                </div>\n                <div style={{width: '15%', display: 'flex', justifyContent: 'center'}}>\n                <span>{item.status}</span>    \n                </div>\n                <div style={{width: '20%', display: 'flex', justifyContent: 'center'}}>\n                <span>{item.supplier}</span>\n                </div>\n                <div style={{width: '20%', display: 'flex', justifyContent: 'center'}}>\n                <span>{dateFormat(item.created_at, \" mmmm dS HH:mm, yyyy\")}</span>\n                </div>\n                </div>\n            }\n            </div>\n            )})}\n            </div>}\n        {/**Requests sorted by Date*/}\n       {props.sort === 1 && props.filter === 2 && props.text === '' && <div>\n        {currentData.sort((a, b) => new Date(...a.created_at.split('/').reverse()) - new Date(...b.created_at.split('/').reverse())).map((item, index) => {return (\n                <div>\n                {item.status === \"pending_confirmation\" && \n                 <div className={classes.row} key={index} style={{backgroundColor:'#EBFFE1'}}>\n                     <div style={{width: '10%', display: 'flex', justifyContent: 'center'}}>\n                 <CheckBoxOutlineBlankIcon style={{color: '#E5E5E5'}}/>\n                 </div>\n                 <div style={{width: '10%', display: 'flex', justifyContent: 'center'}}>\n                 <span >#{item.id}</span>\n                 </div>\n                 <div style={{width: '15%', display: 'flex', justifyContent: 'center'}}>\n                 <span>{item.customer.fname} {item.customer.lname}</span>\n                 </div>\n                 <div style={{width: '15%', display: 'flex', justifyContent: 'center'}}>\n                 <span>{item.status}</span>    \n                 </div>\n                 <div style={{width: '20%', display: 'flex', justifyContent: 'center'}}>\n                <span>{item.supplier}</span>\n                </div>\n                <div style={{width: '20%', display: 'flex', justifyContent: 'center'}}>\n                <span>{dateFormat(item.created_at, \" mmmm dS HH:mm, yyyy\")}</span>\n                </div>\n                </div>}  \n\n                {item.status === \"confirmed\" &&\n                <div className={classes.row} key={index}>\n                    <div style={{width: '10%', display: 'flex', justifyContent: 'center'}}>\n                <CheckBoxOutlineBlankIcon style={{color: '#E5E5E5'}}/>\n                </div>\n                <div style={{width: '10%', display: 'flex', justifyContent: 'center'}}>\n                <span >#{item.id}</span>\n                </div>\n                <div style={{width: '15%', display: 'flex', justifyContent: 'center'}}>\n                <span>{item.customer.fname} {item.customer.lname}</span>\n                </div>\n                <div style={{width: '15%', display: 'flex', justifyContent: 'center'}}>\n                <span>{item.status}</span>    \n                </div>\n                <div style={{width: '20%', display: 'flex', justifyContent: 'center'}}>\n                <span>{item.supplier}</span>\n                </div>\n                <div style={{width: '20%', display: 'flex', justifyContent: 'center'}}>\n                <span>{dateFormat(item.created_at, \" mmmm dS HH:mm, yyyy\")}</span>\n                </div>\n                </div>\n            }\n            </div>\n            )})}\n           </div>}\n            {props.text !== '' && \n            <div>\n                {currentData.map((item, index) => {return (\n                    <div>\n                    {(item.id == props.text || item.customer.fname + ' ' + item.customer.lname == props.text) && \n                        <div className={classes.row} key={index}>\n                        <div style={{width: '10%', display: 'flex', justifyContent: 'center'}}>\n                    <CheckBoxOutlineBlankIcon style={{color: '#E5E5E5'}}/>\n                    </div>\n                    <div style={{width: '10%', display: 'flex', justifyContent: 'center'}}>\n                    <span >#{item.id}</span>\n                    </div>\n                    <div style={{width: '15%', display: 'flex', justifyContent: 'center'}}>\n                    <span>{item.customer.fname} {item.customer.lname}</span>\n                    </div>\n                    <div style={{width: '15%', display: 'flex', justifyContent: 'center'}}>\n                    <span>{item.status}</span>    \n                    </div>\n                    <div style={{width: '20%', display: 'flex', justifyContent: 'center'}}>\n                    <span>{item.supplier}</span>\n                    </div>\n                    <div style={{width: '20%', display: 'flex', justifyContent: 'center'}}>\n                    <span>{dateFormat(item.created_at, \" mmmm dS HH:mm, yyyy\")}</span>\n                    </div>\n                    </div>\n                    }\n                    </div>\n                )})}\n            </div>\n            }\n    </div>\n)\n};\nconst useStyles = makeStyles({\n    tableConatiner: {\n        marginLeft: 40,\n        marginRight: 40,\n        backgroundColor: 'white',\n        width: '95%',\n        height: '100%',\n    },\n    row: {\n        padding: 20,\n        display: 'flex',\n        borderBottom: '1px solid #EBEFF2',\n        flexDirection: 'row',\n    },\n    text: {\n        color: '#E5E5E5',\n    }\n });\n export default Table;",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":75,"column":14,"nodeType":"34","endLine":75,"endColumn":54},{"ruleId":"32","severity":1,"message":"33","line":78,"column":14,"nodeType":"34","endLine":78,"endColumn":111},{"ruleId":"35","severity":1,"message":"36","line":27,"column":10,"nodeType":"37","endLine":27,"endColumn":12,"suggestions":"38"},{"ruleId":"39","severity":1,"message":"40","line":221,"column":31,"nodeType":"41","messageId":"42","endLine":221,"endColumn":33},{"ruleId":"39","severity":1,"message":"40","line":221,"column":96,"nodeType":"41","messageId":"42","endLine":221,"endColumn":98},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'totalPages'. Either include it or remove the dependency array.","ArrayExpression",["45"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},"Update the dependencies array to be: [totalPages]",{"range":"48","text":"49"},[1185,1187],"[totalPages]"]